{"version":3,"sources":["helpers/templates-helpers.js","app.js","firebase.config.js","components/editor.js","components/FormField.js","components/post.js","routes/add.js","routes/errorPage.js","routes/home.js","routes/login.js","routes/logout.js","routes/profileEdit.js","routes/signup.js"],"names":[],"mappingsbxfnPA;AKLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function() {\r\n\r\n  const icons = {\r\n    twitter     : 'fa fa-twitter',\r\n    facebook    : 'fa fa-facebook',\r\n    vkontakte   : 'fa fa-vk',\r\n    website     : 'fa fa-globe',\r\n    publicEmail : 'fa fa-envelope-o',\r\n    phoneNumber : 'fa fa-phone'\r\n  };\r\n\r\n  const socialLinkTemplates = {\r\n    twitter     : (param) => `https://twitter.com/${param}`,\r\n    facebook    : (param) => `https://www.facebook.com/${param}`,\r\n    vkontakte   : (param) => `https://vk.com/${param}`,\r\n    website     : (param) => param,\r\n  };\r\n\r\n  Handlebars.registerHelper('socialIconFor', (name) => {\r\n    return icons[name] || '';\r\n  });\r\n\r\n  Handlebars.registerHelper('socialLinkFor', (name, value) => {\r\n    const tpl = socialLinkTemplates[name];\r\n    if (!tpl) return name;\r\n    return tpl(value);\r\n  });\r\n\r\n  Handlebars.registerHelper('decamelize', (str) => {\r\n    return str\r\n      .split(/(?=[A-Z])/)\r\n      .map(word => word[0].toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  });\r\n\r\n  Handlebars.registerHelper('formatDate', (dateString) => {\r\n    return moment(dateString).fromNow(true);\r\n  });\r\n\r\n  Handlebars.registerHelper('sortBy', () => {});\r\n\r\n  Handlebars.registerHelper('ifCond', (v1, operator, v2, options) => {\r\n    switch (operator) {\r\n      case '==':\r\n        // eslint-disable-next-line eqeqeq\r\n        return (v1 == v2) ? options.fn(this) : options.inverse(this);\r\n      case '===':\r\n        return (v1 === v2) ? options.fn(this) : options.inverse(this);\r\n      case '!=':\r\n        // eslint-disable-next-line eqeqeq\r\n        return (v1 != v2) ? options.fn(this) : options.inverse(this);\r\n      case '!==':\r\n        return (v1 !== v2) ? options.fn(this) : options.inverse(this);\r\n      case '<':\r\n        return (v1 < v2) ? options.fn(this) : options.inverse(this);\r\n      case '<=':\r\n        return (v1 <= v2) ? options.fn(this) : options.inverse(this);\r\n      case '>':\r\n        return (v1 > v2) ? options.fn(this) : options.inverse(this);\r\n      case '>=':\r\n        return (v1 >= v2) ? options.fn(this) : options.inverse(this);\r\n      case '&&':\r\n        return (v1 && v2) ? options.fn(this) : options.inverse(this);\r\n      case '||':\r\n        return (v1 || v2) ? options.fn(this) : options.inverse(this);\r\n      default:\r\n        return options.inverse(this);\r\n    }\r\n  });\r\n\r\n} ());\r\n","//=require 'helpers/*.js'\r\n//=require 'firebase.config.js'\r\n//=require 'components/*.js'\r\n//=require 'routes/*.js'\r\n\r\nvar rootEl = document.getElementById('root');\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\npage('*', authMiddleware);\r\npage('/', home);\r\npage('/signup', signup);\r\npage('/login', login);\r\npage('/logout', logout);\r\npage('/profile-edit', profileEdit);\r\npage('/add', add);\r\npage('*', errorPage);\r\n\r\nfunction authMiddleware(ctx, next) {\r\n\tvar user = firebase.auth().currentUser;\r\n\r\n\tif (user) {\r\n\t\tfirebase.database().ref(`users/${user.uid}`)\r\n\t\t\t.once('value')\r\n\t\t\t.then((userInfo) => {\r\n\t\t\t\tctx.user = ctx.profile = userInfo.val();\r\n\t\t\t\tnext();\r\n\t\t\t});\r\n\t} else {\r\n\t\tctx.user =ctx.profile = null;\r\n\t\tnext();\r\n\t}\r\n}\r\n\r\nconst unsubsribe = firebase.auth().onAuthStateChanged(() => {\r\n\tpage();\r\n\tunsubsribe();\r\n});\r\n","// Initialize Firebase\r\nvar firebaseConfig = {\r\n\tapiKey: \"AIzaSyC8jSUIU7CizElYAx21nBMz9nu0UemZ2mw\",\r\n\tauthDomain: \"instaprjct-42ab8.firebaseapp.com\",\r\n\tdatabaseURL: \"https://instaprjct-42ab8.firebaseio.com\",\r\n\tprojectId: \"instaprjct-42ab8\",\r\n\tstorageBucket: \"instaprjct-42ab8.appspot.com\",\r\n\tmessagingSenderId: \"881000761959\"\r\n};","const generateID = (prefix = '', len = 6) =>\r\n  prefix + Math.random().toString(36).slice(2, len + 2);\r\n\r\nclass Editor {\r\n  constructor(el, props) {\r\n    this.root             = el;\r\n    this.props            = Object.assign({}, Editor.defaults, props);\r\n    this.canvasContainer  = this.root.querySelector(this.props.canvasContainer, this.root);\r\n    this.filtersContainer = this.root.querySelector(this.props.filtersContainer, this.root);\r\n    this.fileInput        = this.root.querySelector(this.props.fileInput, this.root);\r\n    this.triggerReset     = this.root.querySelector(this.props.triggerReset, this.root);\r\n    this.triggerUpload    = this.root.querySelector(this.props.triggerUpload, this.root);\r\n    this.progressBar      = this.root.querySelector(this.props.progressBar, this.root);\r\n    this.caption          = this.root.querySelector(this.props.caption, this.root);\r\n    this.file             = null;\r\n    this.filter           = null;\r\n    this._processing      = false;\r\n\r\n    this.resetFilter       = this.resetFilter.bind(this);\r\n    this.save              = this.save.bind(this);\r\n    this._onFileChange     = this._onFileChange.bind(this);\r\n    this._onFilterClick    = this._onFilterClick.bind(this);\r\n    this._onUploadProgress = this._onUploadProgress.bind(this);\r\n\r\n    this.triggerReset.style.display = 'none';\r\n\r\n    this._bindEvents();\r\n    console.log(this);\r\n  }\r\n\r\n  applyFilter(filter) {\r\n    if (!(filter in this.caman)) {\r\n      console.log(`There is no filter with name \"${filter}\"`);\r\n      return;\r\n    }\r\n\r\n    if (this.filter === filter || this._processing) {\r\n      return;\r\n    }\r\n\r\n    this._processing = true;\r\n    this._toggleBusyState();\r\n    this.caman.revert();\r\n    this.caman[filter]();\r\n    this.caman.render(() => {\r\n      this._processing = false;\r\n      this._toggleBusyState();\r\n      this.filter = filter;\r\n      this._highlightActiveFilter();\r\n    });\r\n  }\r\n\r\n  resetFilter() {\r\n    if (!this.filter) return;\r\n    this.filter = null;\r\n    this.caman && this.caman.revert();\r\n    this._highlightActiveFilter();\r\n    this.triggerReset.style.display = 'none';\r\n  }\r\n\r\n  // get caption and add it to the post as first comment\r\n  _getComments() {\r\n    const caption = this.caption.value.trim();\r\n\r\n    if (!caption) return {};\r\n\r\n    const { uid, username } = this.props.currentUser;\r\n    const commentId = generateID('comment-');\r\n    console.log(this.props.currentUser);\r\n\r\n    return {\r\n      [commentId]: {\r\n        id: commentId,\r\n        value: caption,\r\n        author: username,\r\n        authorId: uid,\r\n        created: (new Date()).toISOString()\r\n      }\r\n    };\r\n  }\r\n\r\n  save() {\r\n    const id          = generateID('post-');\r\n    const user        = firebase.auth().currentUser;\r\n    const dbPath      = `/posts/${id}`;\r\n    const storagePath = `/pictures/${user.uid}/${id}.jpg`;\r\n    const storageRef  = firebase.storage().ref(storagePath);\r\n    const dbRef       = firebase.database().ref(dbPath);\r\n\r\n    // show spinner and progress bar\r\n    this._toggleBusyState();\r\n    this._toggleUploadingState();\r\n\r\n    // upload image to firebase as base64 encoded string\r\n    const uploadTask = storageRef.putString(\r\n      this.caman.toBase64('.jpg'),\r\n      'data_url'\r\n    );\r\n\r\n    // show progress while uploading\r\n    uploadTask.on('state_changed', this._onUploadProgress);\r\n\r\n    uploadTask\r\n      // create entry in firebase database after successfull upload\r\n      .then(snapshot => {\r\n        const { timeCreated, downloadURLs, fullPath } = snapshot.metadata;\r\n        return dbRef.set({\r\n          id,\r\n          author: user.uid,\r\n          created: timeCreated,\r\n          url: downloadURLs[0],\r\n          filterName: this.filter,\r\n          storagePath: fullPath,\r\n          dimensions: {\r\n            width: this.caman.width,\r\n            height: this.caman.height\r\n          },\r\n          comments: this._getComments()\r\n        });\r\n      })\r\n      // hide spinner and progress bar\r\n      .then(() => {\r\n        this._toggleBusyState();\r\n        this._toggleUploadingState();\r\n        this.props.onSave();\r\n      })\r\n      // handle error while uploading or entry creation\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.props.onError(error);\r\n      });\r\n  }\r\n\r\n  _bindEvents() {\r\n    this.triggerReset.addEventListener('click', this.resetFilter);\r\n    this.triggerUpload.addEventListener('click', this.save);\r\n    this.fileInput.addEventListener('change', this._onFileChange);\r\n\r\n    this.filtersContainer.addEventListener('click', (event) => {\r\n      if (event.target.matches('[data-filter]')) {\r\n        this._onFilterClick(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  _onFileChange(e) {\r\n    this.file = this.fileInput.files[0];\r\n    this._initEditor();\r\n  }\r\n\r\n  _onFilterClick(e) {\r\n    const target     = e.target;\r\n    const { filter } = target.dataset;\r\n    if (!filter) return;\r\n    this.applyFilter(filter);\r\n  }\r\n\r\n  _onUploadProgress(snapshot) {\r\n    const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\r\n    this.progressBar.style.width = progress + '%';\r\n  }\r\n\r\n  _highlightActiveFilter() {\r\n    const { activeClass } = this.props;\r\n    const prevActive = document.querySelector('.is-active', this.filtersContainer);\r\n    const nextActive = this.filter\r\n      ? document.querySelector(`[data-filter=\"${this.filter}\"]`, this.filtersContainer)\r\n      : null;\r\n    prevActive && prevActive.classList.remove(activeClass);\r\n    nextActive && nextActive.classList.add(activeClass);\r\n    this.triggerReset.style.display = '';\r\n  }\r\n\r\n  _toggleBusyState() {\r\n    const { busyClass } = this.props;\r\n    const isBusy   = this.root.classList.contains(busyClass);\r\n    const triggers = [this.triggerReset, this.triggerUpload];\r\n    const method   = isBusy ? 'removeAttribute' : 'setAttribute';\r\n\r\n    this.root.classList.toggle(busyClass);\r\n    triggers.forEach(el => el[method]('disabled', true));\r\n  }\r\n\r\n  _toggleUploadingState() {\r\n    this.root.classList.toggle(this.props.uploadingClass);\r\n  }\r\n\r\n  _initEditor() {\r\n    const { busyClass, hasImageClass, imageMaxSize } = this.props;\r\n    const url    = URL.createObjectURL(this.file);\r\n    const canvas = document.createElement('canvas');\r\n\r\n    if (this.canvas) {\r\n      this.canvas.parentNode.replaceChild(canvas, this.canvas);\r\n    } else {\r\n      this.canvasContainer.appendChild(canvas);\r\n    }\r\n\r\n    this.canvas = canvas;\r\n    this._toggleBusyState();\r\n    this.caman = Caman(this.canvas, url, (caman) => {\r\n      const { originalWidth, originalHeight } = caman;\r\n      const ratio  = originalWidth / originalHeight;\r\n      const width  = originalWidth > imageMaxSize ? imageMaxSize : originalWidth;\r\n      const height = Math.round(width / ratio);\r\n\r\n      caman.resize({ width, height }).render();\r\n\r\n      this._toggleBusyState();\r\n      this.root.classList.add(hasImageClass);\r\n    });\r\n  }\r\n}\r\n\r\nEditor.defaults = {\r\n  currentUser: {},\r\n  activeClass: 'is-active',\r\n  busyClass: 'is-busy',\r\n  hasImageClass: 'has-image',\r\n  uploadingClass: 'is-uploading',\r\n  filtersContainer: '.editor__presets',\r\n  canvasContainer: '.editor__canvas-container',\r\n  triggerReset: '.editor__reset',\r\n  triggerUpload: '.editor__upload',\r\n  fileInput: 'input[type=\"file\"]',\r\n  progressBar: '.editor__progress .progress-bar',\r\n  caption: '.editor__caption textarea',\r\n  imageMaxSize: 1200,\r\n  onSave: () => {},\r\n  onError: () => {}\r\n};\r\n\r\nEditor.FILTERS = [\r\n  'vintage',\r\n  'lomo',\r\n  'clarity',\r\n  'sinCity',\r\n  'sunrise',\r\n  'crossProcess',\r\n  'orangePeel',\r\n  'love',\r\n  'grungy',\r\n  'jarques',\r\n  'pinhole',\r\n  'oldBoot',\r\n  'glowingSun',\r\n  'hazyDays',\r\n  'herMajesty',\r\n  'nostalgia',\r\n  'hemingway',\r\n  'concentrate'\r\n];\r\n","const errorTexts = {\r\n\trequired: 'Field should be required',\r\n\thasAtSymbol: 'Field should has @',\r\n\tpassword: 'Password should be at least six symbols',\r\n\tusername: 'Username should contains only letters',\r\n\tdisplayName: 'Username should contains only letters'\r\n};\r\n\r\nconst validators = {\r\n\trequired: value => value.length !== 0,\r\n\thasAtSymbol: value => value.indexOf('@') !== -1,\r\n\tpassword: value => value.length > 6,\r\n\tusername: value =>  /\\w+/.test(value),\r\n\tdisplayName: value => /\\w+/.test(value)\r\n};\r\n\r\nclass FormField {\r\n\tconstructor(element, options) {\r\n\t\tthis.element = element;\r\n\t\tthis.options = Object.assign({}, FormField.defaultOptions, options);\r\n\t\tthis.errors = [];\r\n\t}\r\n\r\n\tisValid() {\r\n\t\tfor(let i = 0; i < this.options.validations.length; i++) {\r\n\t\t\tlet valName = this.options.validations[i];\r\n\r\n\t\t\tif(validators[valName](this.element.value) === false) {\r\n\t\t\t\tthis.errors.push(errorTexts[valName]);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tresetState() {\r\n\t\tthis.element.parentNode.classList.remove(this.options.errorClass);\r\n\t\tthis.element.parentNode.classList.remove(this.options.successClass);\r\n\t\tthis.element.nextElementSibling.innerText = '';\r\n\t}\r\n\r\n\tsetErrorState(message) {\r\n\t\tthis.element.parentNode.classList.add(this.options.errorClass);\r\n\t\tthis.element.nextElementSibling.innerText = this.errors;\r\n\t\tif(this.errors.length !== 0) {\r\n\t\t\tthis.errors = [];\r\n\t\t}\r\n\t}\r\n\r\n\tsetSuccessState() {\r\n\t\tthis.errors = [];\r\n\t\tthis.element.parentNode.classList.add(this.options.successClass);\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tif(this.isValid() === false) {\r\n\t\t\tthis.resetState();\r\n\t\t\tthis.setErrorState();\r\n\t\t} else {\r\n\t\t\tthis.resetState();\r\n\t\t\tthis.setSuccessState();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nFormField.defaultOptions = {\r\n\tvalidations: [],\r\n\terrorClass: 'has-error',\r\n\tsuccessClass: 'has-success'\r\n};","class Post {\r\n\t/**\r\n\t * @param  {string|Object} post - Post id as string or already retrieved data of post\r\n\t * @return {void}\r\n\t */\r\n\tconstructor(post, props = {}) {\r\n\t\tthis.props = Object.assign({}, Post.defaults, props);\r\n\t\tthis.tpl = Handlebars.partials.post;\r\n\t\tthis.currentUser = this.props.currentUser;\r\n\t\tthis.liked = false; // is post liked by currentUser?\r\n\t\tthis.disliked = false; // is post disliked by currentUser?\r\n\r\n\t\tthis._onDataRetrieved = this._onDataRetrieved.bind(this);\r\n\t\t// this._onDataChanged();\r\n\r\n\t\tthis._setupDomElement();\r\n\t\tthis._setupDbRef(post);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.time('render');\r\n\t\tthis.element.innerHTML = this.tpl(\r\n\t\t\tObject.assign({}, this.data, {\r\n\t\t\t\tauthor: this.author,\r\n\t\t\t\tcurrentUser: this.currentUser,\r\n\t\t\t\tliked: this.liked,\r\n\t\t\t\tlikesCount: Object.keys((this.data && this.data.likes) || {}).length,\r\n\t\t\t\tdisliked: this.disliked,\r\n\t\t\t\tdislikesCount: Object.keys((this.data && this.data.dislikes) || {}).length,\r\n\t\t\t\tisOwner: this.data.author === this.currentUser.uid\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log('this is this', this);\r\n\t\tconsole.timeEnd('render');\r\n\r\n\t\t/*---=== update likes count ===---*/\r\n\t\tfunction updateLikeCount(elemThis) {\r\n\t\t\tfirebase.database().ref(`posts/${elemThis.data.id}`).update({\r\n\t\t\t\tlikesCountNum: Object.keys((elemThis.data && elemThis.data.likes) || {}).length\r\n\t\t\t});\r\n\t\t}\r\n\t\t/*---=== /update likes count ===---*/\r\n\r\n\t\t/*---=== update db data on like or dislike ===---*/\r\n\t\tfunction dbUpdate(elemThis, child) {\r\n\t\t\tfirebase.database().ref(`posts/${elemThis.data.id}`).child(child).update({\r\n\t\t\t\t[elemThis.currentUser.uid]: {\r\n\t\t\t\t\tcreatedByUserName: elemThis.currentUser.username,\r\n\t\t\t\t\tcreatedByUserEmail: elemThis.currentUser.email,\r\n\t\t\t\t\ttype: 'default',\r\n\t\t\t\t\tcreatedAt: (new Date()).toLocaleString('uk'),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t/*---=== /update db data on like or dislike ===---*/\r\n\r\n\t\t/*---=== click on like or dislike ===---*/\r\n\t\tthis.element.addEventListener('click', (e) => {\r\n\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\tlet clickTargetClassList = e.target.className.split(' ');\r\n\r\n\t\t\tif (clickTargetClassList.indexOf('fa-heart-o') === 1) {\r\n\t\t\t\t// console.log('like');\r\n\t\t\t\tdbUpdate(this, 'likes');\r\n\t\t\t\tupdateLikeCount(this);\r\n\r\n\t\t\t} else if (clickTargetClassList.indexOf('custom-icon--broken-heart') === 1) {\r\n\t\t\t\t// console.log('dislike');\r\n\t\t\t\tdbUpdate(this, 'dislikes');\r\n\t\t\t}\r\n\t\t});\r\n\t\t/*---=== /click on like or dislike ===---*/\r\n\r\n\t}\r\n\r\n\tgetElement() {\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t_setupDomElement() {\r\n\t\tthis.element = document.createElement('article');\r\n\t\tthis.element.classList = 'post';\r\n\t}\r\n\r\n\t_fetchAutor() {\r\n\t\tfirebase\r\n\t\t\t.database()\r\n\t\t\t.ref(`users/${this.data.author}`)\r\n\t\t\t.once('value', snapshot => {\r\n\t\t\t\tthis.author = snapshot.val();\r\n\t\t\t\tthis.render();\r\n\t\t\t});\r\n\t}\r\n\r\n\t_onDataRetrieved(snapshot) {\r\n\t\tthis.data = snapshot.val();\r\n\t\tthis.author || this._fetchAutor();\r\n\t\tthis.element.setAttribute('data-post', this.data.id);\r\n\t\tthis.liked = !!(this.data.likes && this.data.likes[this.currentUser.uid]);\r\n\t\tthis.disliked = !!(this.data.dislikes && this.data.dislikes[this.currentUser.uid]);\r\n\t\t// this.likesCountNum = this.likesCount.likesCountNum\r\n\t\tthis.render();\r\n\t\tconsole.log('data retrived', this.data);\r\n\t}\r\n\r\n\t_onDataChanged(snapshot) {\r\n\t\tconst key = snapshot.key;\r\n\t\tconst value = snapshot.val();\r\n\t\tthis.data[key] = value;\r\n\t\tthis.render();\r\n\t\tconsole.log('data changed', key, value);\r\n\t}\r\n\r\n\t_setupDbRef(post) {\r\n\t\tconst id = typeof post === 'string' ? post : post.id;\r\n\t\tthis.dbRef = firebase.database().ref(`posts/${id}`);\r\n\t\tthis.dbRef.on('value', this._onDataRetrieved);\r\n\t}\r\n\r\n}\r\n\r\nPost.defaults = {\r\n\tcurrentUser: {}\r\n};","function add(ctx, next) {\r\n  rootEl.innerHTML = templates.add({\r\n    user: ctx.user,\r\n    profile: ctx.user,\r\n    filters: Editor.FILTERS\r\n  });\r\n\r\n  const editor = document.getElementById('editor');\r\n  new Editor(editor, {\r\n    currentUser: ctx.user,\r\n    onSave: () => {\r\n      page.redirect('/');\r\n    }\r\n  });\r\n}\r\n","function errorPage() {\r\n\trootEl.innerHTML = templates['404']();\r\n}","function home(ctx) {\r\n\tconsole.log(ctx);\r\n\trootEl.innerHTML = templates.main({\r\n\t\tuser: ctx.user,\r\n\t\tprofile: ctx.user\r\n\t});\r\n\r\n\tif (!ctx.user) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst feed  = document.getElementById('feed');\r\n\tconst dbRef = firebase.database().ref();\r\n\r\n\tdbRef\r\n\t\t.child('posts')\r\n\t\t.orderByChild('likesCountNum')\r\n\t\t.limitToLast(10)\r\n\t\t.once('value', snapshot => {\r\n\t\t\tconst entries = snapshot.val();\r\n\t\t\tconsole.log('entries::: =>', entries);\r\n\t\t\tif (!entries) return;\r\n\t\t\tObject.keys(entries).forEach((key) => {\r\n\t\t\t\tlet entry = entries[key];\r\n\t\t\t\tconst post = new Post(entry, { currentUser: ctx.user });\r\n\t\t\t\tfeed.insertBefore(post.getElement(), feed.firstElementChild);\r\n\t\t\t})\r\n\t\t});\r\n}","function login() {\r\n\trootEl.innerHTML = templates.login();\r\n\r\n\tvar form = document.getElementById('login-form');\r\n\r\n\tvar {email, password} = form;\r\n\r\n\tform.addEventListener('submit', (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tlet emailValidate = new FormField(email, {\r\n\t\t\tvalidations: ['required', 'hasAtSymbol']\r\n\t\t});\r\n\r\n\t\tlet passwordValidate = new FormField(password, {\r\n\t\t\tvalidations: ['password']\r\n\t\t});\r\n\r\n\t\temailValidate.validate();\r\n\t\tpasswordValidate.validate();\r\n\r\n\t\tif(emailValidate.isValid() && passwordValidate.isValid()) {\r\n\t\t\tfirebase.auth().signInWithEmailAndPassword(email.value, password.value)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tpage('/');\r\n\t\t\t\t})\r\n\t\t}\r\n\t});\r\n\r\n}","function logout() {\r\n\tfirebase.auth().signOut()\r\n\t\t.then(() => {\r\n\t\t\tpage('/');\r\n\t\t});\r\n}","function profileEdit() {\r\n\trootEl.innerHTML = templates['profile-edit']();\r\n}","function signup () {\r\n\trootEl.innerHTML = templates.signup();\r\n\tlet form = document.getElementById('signup-form');\r\n\r\n\tlet {email, username, displayName, password, passwordConfirm} = form;\r\n\r\n\tform.addEventListener('submit', (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tlet emailValidate = new FormField(email, {\r\n\t\t\tvalidations: ['required', 'hasAtSymbol']\r\n\t\t});\r\n\r\n\t\tlet passwordValidate = new FormField(password, {\r\n\t\t\tvalidations: ['password']\r\n\t\t});\r\n\r\n\t\tlet usernameValidate = new FormField(username, {\r\n\t\t\tvalidations: ['username']\r\n\t\t});\r\n\r\n\t\tlet displayNameValidate = new FormField(displayName, {\r\n\t\t\tvalidations: ['displayName']\r\n\t\t});\r\n\r\n\t\temailValidate.validate();\r\n\t\tpasswordValidate.validate();\r\n\t\tusernameValidate.validate();\r\n\t\tdisplayNameValidate.validate();\r\n\r\n\t\tif(emailValidate.isValid() && passwordValidate.isValid()) {\r\n\t\t\tfirebase.auth().createUserWithEmailAndPassword(email.value, password.value)\r\n\t\t\t\t.then((value) => {\r\n\t\t\t\t\tfirebase.database().ref(`users/${value.uid}`).set({\r\n\t\t\t\t\t\tuid: value.uid,\r\n\t\t\t\t\t\temail: email.value,\r\n\t\t\t\t\t\tusername: username.value,\r\n\t\t\t\t\t\tdisplayName: displayName.value,\r\n\t\t\t\t\t\tcreatedAt: (new Date()).toISOString()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tpage('/');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\n}"]}